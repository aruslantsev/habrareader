from sqlite3 import Connection
from habrareader.data.tables import (
    ARTICLE_TBL,
    ARTICLE_CONTENTS_TBL,
    AUTHOR_TBL,
    ARTICLE_STATISTICS_TBL,
    ARTICLE_HUB_TBL,
    ARTICLE_TAG_TBL,
    ARTICLE_FLOW_TBL,
    HUB_TBL,
    FLOW_TBL,
    ARTICLE_COMMENT_TBL,
    COMMENT_CONTENTS_TBL,
    COMMENT_CHILD_TBL,
)

from habrareader.data.columns import (
    ID,
    TIME_DOWNLOADED,
    TIME_PUBLISHED,
    IS_SUCCESS,
    LANG,
    TITLE,
    TEXT_HTML,
    LEAD_DATA,
    IS_CORPORATIVE,
    ORIGINAL_URL,
    NUM_COMMENTS,
    NUM_READINGS,
    SCORE,
    VOTES,
    VOTES_POSITIVE,
    VOTES_NEGATIVE,
    AUTHOR_ID,
    ALIAS,
    FULL_NAME,
    HUB_ID,
    HUB_ALIAS,
    HUB_TYPE,
    HUB_TITLE,
    HUB_TITLE_HTML,
    TAG_TITLE_HTML,
    FLOW_ID,
    FLOW_ALIAS,
    FLOW_TITLE,
    FLOW_TITLE_HTML,
    COMMENT_ID,
    VOTES_COUNT,
    MESSAGE,
    CHILD_COMMENT_ID,
)


CREATE_ARTICLE_TBL_STMT = f"""
CREATE TABLE IF NOT EXISTS {ARTICLE_TBL} (
{ID} INTEGER PRIMARY KEY,
{TIME_DOWNLOADED} INTEGER NOT NULL,
{TIME_PUBLISHED} INTEGER,
{IS_SUCCESS} INTEGER
);
"""

CREATE_ARTICLE_CONTENTS_TBL_STMT = f"""
CREATE TABLE IF NOT EXISTS {ARTICLE_CONTENTS_TBL} (
{ID} INTEGER PRIMARY KEY,
{LANG} TEXT,
{TITLE} TEXT NOT NULL,
{AUTHOR_ID} INTEGER NOT NULL,
{TEXT_HTML} TEXT NOT NULL,
{LEAD_DATA} TEXT NOT NULL,
{IS_CORPORATIVE} INTEGER NOT NULL,
{ORIGINAL_URL} TEXT
);
"""

CREATE_AUTHOR_TBL_STMT = f"""
CREATE TABLE IF NOT EXISTS {AUTHOR_TBL} (
{AUTHOR_ID} INTEGER PRIMARY KEY,
{ALIAS} TEXT NOT NULL,
{FULL_NAME} TEXT
);
"""

CREATE_ARTICLE_STATISTICS_TBL_STMT = f"""
CREATE TABLE IF NOT EXISTS {ARTICLE_STATISTICS_TBL} (
{ID} INTEGER PRIMARY KEY,
{NUM_COMMENTS} INTEGER NOT NULL,
{NUM_READINGS} INTEGER NOT NULL,
{SCORE} INTEGER NOT NULL,
{VOTES} INTEGER NOT NULL,
{VOTES_POSITIVE} INTEGER NOT NULL,
{VOTES_NEGATIVE} INTEGER NOT NULL
);
"""

CREATE_ARTICLE_HUB_TBL_STMT = f"""
CREATE TABLE IF NOT EXISTS {ARTICLE_HUB_TBL} (
{ID} INTEGER NOT NULL,
{HUB_ID} INTEGER NOT NULL
);
"""

CREATE_ARTICLE_TAG_TBL_STMT = f"""
CREATE TABLE IF NOT EXISTS {ARTICLE_TAG_TBL} (
{ID} INTEGER NOT NULL,
{TAG_TITLE_HTML} TEXT NOT NULL
);
"""

CREATE_ARTICLE_FLOW_TBL_STMT = f"""
CREATE TABLE IF NOT EXISTS {ARTICLE_FLOW_TBL} (
{ID} INTEGER NOT NULL,
{FLOW_ID} INTEGER NOT NULL
);
"""

CREATE_HUB_TBL_STMT = f"""
CREATE TABLE IF NOT EXISTS {HUB_TBL} (
{HUB_ID} INTEGER PRIMARY KEY,
{HUB_ALIAS} TEXT NOT NULL,
{HUB_TYPE} TEXT NOT NULL,
{HUB_TITLE} TEXT NOT NULL,
{HUB_TITLE_HTML} TEXT NOT NULL
);
"""

CREATE_FLOW_TBL_STMT = f"""
CREATE TABLE IF NOT EXISTS {FLOW_TBL} (
{FLOW_ID} INTEGER PRIMARY KEY,
{FLOW_ALIAS} TEXT NOT NULL,
{FLOW_TITLE} TEXT NOT NULL,
{FLOW_TITLE_HTML} TEXT NOT NULL
);
"""

CREATE_ARTICLE_COMMENT_TBL_STMT = f"""
CREATE TABLE IF NOT EXISTS {ARTICLE_COMMENT_TBL} (
{ID} INTEGER NOT NULL,
{COMMENT_ID} INTEGER NOT NULL,
{TIME_PUBLISHED} INTEGER NOT NULL
);
"""

CREATE_COMMENT_CONTENTS_TBL_STMT = f"""
CREATE TABLE IF NOT EXISTS {COMMENT_CONTENTS_TBL} (
{COMMENT_ID} INTEGER PRIMARY KEY,
{SCORE} INTEGER NOT NULL,
{VOTES_COUNT} INTEGER NOT NULL,
{MESSAGE} TEXT NOT NULL,
{AUTHOR_ID} INTEGER NOT NULL
);
"""

CREATE_COMMENT_CHILD_TBL_STMT = f"""
CREATE TABLE IF NOT EXISTS {COMMENT_CHILD_TBL} (
{COMMENT_ID} INTEGER PRIMARY KEY,
{CHILD_COMMENT_ID} INTEGER
);
"""


def create_tables(connection: Connection):
    cursor = connection.cursor()
    cursor.execute(CREATE_ARTICLE_TBL_STMT)
    cursor.execute(CREATE_ARTICLE_CONTENTS_TBL_STMT)
    cursor.execute(CREATE_AUTHOR_TBL_STMT)
    cursor.execute(CREATE_ARTICLE_STATISTICS_TBL_STMT)
    cursor.execute(CREATE_ARTICLE_HUB_TBL_STMT)
    cursor.execute(CREATE_ARTICLE_TAG_TBL_STMT)
    cursor.execute(CREATE_ARTICLE_FLOW_TBL_STMT)
    cursor.execute(CREATE_HUB_TBL_STMT)
    cursor.execute(CREATE_FLOW_TBL_STMT)
    cursor.execute(CREATE_ARTICLE_COMMENT_TBL_STMT)
    cursor.execute(CREATE_COMMENT_CONTENTS_TBL_STMT)
    cursor.execute(CREATE_COMMENT_CHILD_TBL_STMT)
